name: 'Wait for manual approval'
description: 'Create an issue and wait for an "approved" comment'
inputs:
  timeout-in-minutes:
    description: 'Waiting for approval timeout in minutes'
    required: true
    default: '10'
runs:
  using: "composite"
  steps:
    - name: Waiting for manual approval
      uses: actions/github-script@v6
      with:
        script: |

          const isDebug = process.env.ACTIONS_RUNNER_DEBUG;

          function debugLog(...args) {
            if (isDebug)  {
              console.log(...args);
            }
          }

          async function getComments(issueNumber) {
            var response = await github.rest.issues.listComments({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issueNumber
                });
            debugLog("Get comments response", response);
            return response.data;
          }

          async function waitForApproval(issueNumber) {
            const timer = ms => new Promise(res => setTimeout(res, ms));

            const operationTimeoutInMinutes = ${{ inputs.timeout-in-minutes }};
            const operationTimeout = operationTimeoutInMinutes * 1000 * 60;

            var iterationTimeout = 5000;
            var iterations = operationTimeout / iterationTimeout;

            debugLog(`Maximum number of waiting iterations: ${iterations}.`);

            for (var i = 0; i < iterations; i++) {
              await timer(iterationTimeout);
              debugLog(`Iteration ${i}`);
              var comments = await getComments(issueNumber);
              if (comments.findIndex(c => c.body == 'approved') != -1) {
                return true;
              }
              if (comments.findIndex(c => c.body == 'rejected') != -1) {
                return false;
              }
            }
            
            return false;
          }

          async function createIssue() {
            var response = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: "Request for approval from github action",
              body: "To approve the request add a comment `approved`, to reject the request add a comment `rejected`"
            });
            debugLog("Create issue response", response);
            return response.data;
          }

          async function closeIssue(issue, isApproved) {
            var response = await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
              title: issue.title + (isApproved ? ' (Approved)' : ' (Rejected/Timed out)'),
              state: "closed"
            });
            debugLog(`Close issue ${issue.number} response`, response);
          }
          
          var issue = await createIssue();
          console.log(`Created issue ${issue.number}. Awaiting approval.`)
          var isApproved = await waitForApproval(issue.number);

          await closeIssue(issue, isApproved);

          if (isApproved) {
            console.log(`The issue ${issue.number} has been approved.`);
          } else {
            throw `The issue ${issue.number} has not been approved.`;
          }